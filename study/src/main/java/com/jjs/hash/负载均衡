一致性hash算法：
1）简单的Hash算法：
    group = key % N;
    当集群数量发生变化时候，之前的Hash映射就会失效。如果集群服务器提供服务无差别，则产生影响不大
    但是，对于分布式缓存系统，则结果是灾难性的。

2）一致性Hash通过构建环状得Hash空间代替线性Hash空间方法解决
    整个Hash空间被构建成一个首尾相连的环，使用一致性Hash需要进行两次映射。
    2.1）第一次给每个节点计算Hash，然后记录他们得Hash值，也就是他们在环上的位置
    2.2）第二次给每个key计算Hash,然后沿着顺时针方向寻找环上得第一个节点，就是该key存储对于得集群

    问题：
        数据倾斜：如果节点数量很少，而Hash环空间很大，直接一致性hash上去，大部分情况下节点在环上得位置会很不均匀。
        缓存雪崩：当集群中某个节点消失后，他原本负责的任务交给后面一个集群，这样后面得集群压力瞬间增大，如果因此崩溃，则会将压力继续向后压力，最终导致雪崩。

    解决办法：
        引入虚拟节点:将一个实际节点映射多个虚拟节点，这样Hash环上空间分割变得均匀。